#+BLOG: wordpress
#+POSTID: 586
#+DATE: [2016-08-13 Sat 08:28]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: Mathematica, Stan
#+TAGS:
#+DESCRIPTION:
#+TITLE: Mathematica & Stan data files


* UPDATE:

Finally my first attempt to use CmdStan from Mathematica (*Old post*
section) has given birth of a complete Mathematica package. This
package has become the official [[http://mc-stan.org/interfaces/mathematica-stan.html][Stan Mathematica Interface]].

* Old post (deprecated)

A short post with Mathematica codes to be used with [[http://mc-stan.org/interfaces/cmdstan][CmdStan]]

** RDump export

These functions allow to export *scalar*, *vector* or *matrix* from Mathematica in *R-Dump*
  format. I use these to create *Stan* input data files.

You can read about *RDump* format in [[https://github.com/stan-dev/cmdstan/releases/download/v2.11.0/cmdstan-guide-2.11.0.pdf][CmdStan pdf doc, Appendix C]].

#+BEGIN_SRC mathematica
ToStringRDumpHelper[V_ /; VectorQ[V]] :=
StringJoin["c(",StringTake[ToString[Map[CForm, V]], {2, -2}],")"];

ToStringRDump[{MatName_,M_}/;StringQ[MatName]&&MatrixQ[M]]:=
StringJoin[MatName," <- structure(",
ToStringRDumpHelper[Flatten[Transpose[M]]],
", .Dim = ",ToStringRDumpHelper[Dimensions[M]],")\n"];

ToStringRDump[{VectName_,V_}/;StringQ[VectName]&&VectorQ[V]]:=
StringJoin[VectName," <- ",ToStringRDumpHelper[V],"\n"];

ToStringRDump[{VarName_,Var_}/;StringQ[VarName]&&NumberQ[Var]]:=
StringJoin[VarName," <- ",ToString[Var],"\n"];

ExportRDump[{FileName_,ListOfNameValue_}/;
StringQ[FileName]&&VectorQ[ListOfNameValue[[All,1]],StringQ]]:=
Module[{str},
       Print["Writing " <> FileName <> " file"];
       str= OpenWrite[FileName ];
       WriteString[str,
                   StringJoin[Map[ToStringRDump,ListOfNameValue]]];
Close[str]];
#+END_SRC

*** Usage example:

#+BEGIN_SRC mathematica
v=Table[Random[],{i,1,3}];
M=Table[Random[],{i,1,2},{j,1,4}];

ExportRDump[{"test.data.R",
   {{"sigma",1},
    {"v",v},
    {"M",M}}}];
#+END_SRC

will create the ASCII file *test.data.R*:

#+BEGIN_EXAMPLE
sigma <- 1 
v <- c(0.8914424568109295, 0.16369644806632871,
0.8224818003409107) 
M <- structure(c(0.1953095908232137,
0.5654916252654406, 0.9973146784469278, 0.3912859635579676,
0.11095601398483428, 0.15813096143059435, 0.3588746131035059,
0.15208129825920863), .Dim = c(2, 4))
#+END_EXAMPLE

** Import Stan results

The following functions allow you to get results from a *Stan* computation.

#+BEGIN_SRC mathematica
ImportStanCSVNoComment[outputCSV_?StringQ]:=ImportString[StringJoin@Riffle[Select[StringSplit[Import[outputCSV,"Text"],"\n"],
               StringTake[#,1]!="#"&],"\n"],"CSV"];

ExtractVariableStanCSVNoComment[var_?StringQ,stanCSVNoComment_?MatrixQ]:=
  Module[{header,selected,col,extracted},
  header=Table[{i,stanCSVNoComment[[1,i]]},{i,1,Length[stanCSVNoComment[[1]]]}];
  selected=Select[header,StringMatchQ[#[[2]],var]&];
  If[Length[selected]!=1,Print[var<>" not found!"];Abort[]];
  col=selected[[1,1]];
  extracted=stanCSVNoComment[[2;;-1]][[All,col]];
  Print[{selected[[1,2]],Mean[extracted],Sqrt[Variance[extracted]]}];
  Return[extracted]
]
  
ExtractArrayVariableStanCSVNoComment[var_?StringQ,stanCSVNoComment_?MatrixQ]:=
  Module[{header,selected,colStart,colEnd,extracted},
  header=Table[{i,stanCSVNoComment[[1,i]]},{i,1,Length[stanCSVNoComment[[1]]]}];
  selected=Select[header,StringMatchQ[#[[2]],var~~"."~~NumberString]&];
  If[Length[selected]==0,Print[var<>" not found!"];Abort[]];
  {colStart,colEnd}={selected[[1,1]],selected[[-1,1]]};
  extracted=stanCSVNoComment[[2;;-1]][[All,colStart;;colEnd]];
  Print[Transpose[Append[Append[{selected[[All,2]]},
        Map[Mean,Transpose[extracted]]],
        Map[Sqrt[Variance[#]]&,Transpose[extracted]]]]];
  Return[extracted];
]
#+END_SRC

** A complete example

We use the *bernoulli.stan* example of [[http://mc-stan.org/interfaces/cmdstan][CmdStan]]

#+BEGIN_EXAMPLE
data { 
  int<lower=0> N; 
  int<lower=0,upper=1> y[N];
} 
parameters {
  real<lower=0,upper=1> theta;
} 
model {
  theta ~ beta(1,1);
  for (n in 1:N) 
    y[n] ~ bernoulli(theta);
}
#+END_EXAMPLE

First we create and save the data file:

#+BEGIN_SRC mathematica
data=Table[Random[BernoulliDistribution[0.2016]],{i,1,1000}];
toExport={{"N",Length[data]},{"y",data}};
ExportRDump[{"bernoulli.data.R",toExport}]
#+END_SRC

Then we run the *bernoulli executable*:

#+BEGIN_SRC mathematica
Run["./bernoulli variational data file=bernoulli.data.R"]
#+END_SRC

We get the result and plot the $\theta$ variable with:
#+BEGIN_SRC mathematica
output=ImportStanCSVNoComment["output.csv"];
Histogram[ExtractVariableStanCSVNoComment["theta",output]]
#+END_SRC

This prints:
#+BEGIN_EXAMPLE
{theta 0.201361 0.011447}
#+END_EXAMPLE

with

[[file:stanReader.png]]

** Final word

This is a quick and dirty solution. If I improve the Mathematica code
quality I will update this post.  At least it allows to play with Stan
from Mathematica.

# stanReader.png http://pixorblog.files.wordpress.com/2016/08/stanreader.png
